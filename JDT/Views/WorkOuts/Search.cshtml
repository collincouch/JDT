@{
    ViewBag.Title = "Search";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="content container">
    <div class="row">
        <div class="col-md-10 col-md-offset-1">
            <section class="widget">
                <header>
                    <h4>
                        <i class="fa fa-file-alt"></i>
                        Workouts
                    </h4>
                </header>
                <div class="body">
                    <blockquote>
                        Search for workouts and sign up for the ones you want to track progress on
                    </blockquote>
                    <div id="datatable-table_wrapper" class="dataTables_wrapper form-inline" role="grid">
                       
                        <table id="datatable-table" class="table table-striped dataTable">
                            <thead>
                            
                            </thead>
                            <tfoot>

                            </tfoot>
                        </table>
                        
                    </div>
            </section>
        </div>
</div>
   
@section scripts{
    @Scripts.Render("~/bundles/dashboard/jqueryplugins")
    @Scripts.Render("~/bundles/backboneunderscore")
    @Scripts.Render("~/bundles/bootstrap")
    @Scripts.Render("~/bundles/site")
    @Scripts.Render("~/Content/js/libs/jquery.dataTables.min.js")
    @Scripts.Render("~/Content/js/CrudOps/WorkOuts.js")

    <script>
        $(document).ready(function () {
            initListAuth1(function (plans) {
               var my_cols = [ 'xxx', 'yyy','zzz'];
  var my_cols1 = ['DateCreated','DateModified', 'Description', 'Name'];
  var cols = [];
  var targetColumns=[];
  var currentRowKey;
  var objName;
  var propName;
 
  cols.push({mRender:renderColumn, aTargets:['_all']});
  
for ( var i=0, iLen=my_cols.length ; i<iLen ; i++ ){
  for(var x=0, iLen1=my_cols1.length; x<iLen1; x++){
    cols.push( { mData: my_cols[i] + "." + my_cols1[x], sTitle:my_cols1[x], sDefaultContent: "", aTargets:[x]});
  }
}
  
  function getTargetColumn(objName)
  {
    //console.log('getTargetColumn');
    for(var key in objName){
      //console.log('key ' + key);
      if($.inArray(key,targetColumns)==-1)
      {
        targetColumns.push(key);
        return key;
        
      }
    }
  }
  
  function setProps(row, callback)
  {
    //console.log('setProps Start');
   for(var key in row)
    {
      if(currentRowKey!=key){
      targetColumns = [];
      currentRowKey=key;
      }
      //console.log('length ' + targetColumns.length);
      objName=key;
      
      propName = getTargetColumn(row[objName]);
      callback(objName,propName);
      break;
    }
    //console.log('setProps End');
  }
  
  function renderColumn(data,type,row)
  {
    
    if(type=='display'){
    setProps(row,getTargetColumn);
    return row[objName][propName];
    }
  }

  oTable = $('#datatable-table').dataTable({
    "aaData": [{"xxx":{"DateCreated":"2013/11/27",
                       "DateModified":"2013/12/02",
                       "Description":"Test xxx",
                       "Name":"Name xxx"}},
               {"yyy":{"DateCreated":"2013/12/02",
                       "DateModified":"2013/12/02",
                       "Description":"Test yyy",
                       "Name":"Name yyy"}},
              {"zzz":{"DateCreated":"2013/12/02",
                       "DateModified":"2013/12/02",
                       "Description":"Test zzz",
                       "Name":"Name zzz"}}],
                   "aoColumnDefs": cols
                });
            });
            });

            
            
     

    </script>
}
