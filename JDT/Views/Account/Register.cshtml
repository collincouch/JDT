@model JDT.Models.RegisterModel
@{
    ViewBag.Title = "Register";
    Layout = "~/Views/Shared/_LayoutUnAuth.cshtml";
}
<div class="content container">
    <div class="row">
        <div class="col-md-12">
            <h2 class="page-title">@ViewBag.Title</h2>
        </div>
    </div>
    <div class="row">
        <div class="col-md-7">
            <section class="widget">
                <header>
                    <h4>
                        <i class="fa fa-user"></i> Account Profile <small>Create new account</small>
                    </h4>
                </header>
                <div class="body">
                    @using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "form-horizontal label-left", id="Register", data_validate="parsley", novalidate="novalidate" }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.ValidationSummary(true)
                        <fieldset>
                            <legend class="section">Registration Info</legend>
                            <div class="control-group">
                                @Html.LabelFor(m => m.UserName, new { @class = "control-label" })
                                <div class="controls form-group">
                                    @Html.TextBoxFor(m => m.UserName, new { @class = "col-xs-12 parsley-validated", required = "required" })
                                </div>
                            </div>
                            <div class="control-group">
                                @Html.LabelFor(m => m.FirstName, new { @class = "control-label" })
                                <div class="controls form-group">
                                    @Html.TextBoxFor(m => m.FirstName, new { @class = "col-xs-12 parsley-validated", required = "required" })
                                </div>
                            </div>
                            <div class="control-group">
                                @Html.LabelFor(m => m.LastName, new { @class = "control-label" })
                                <div class="controls form-group">
                                    @Html.TextBoxFor(m => m.LastName, new { @class = "col-xs-12 parsley-validated", required = "required" })
                                </div>
                            </div>
                            <div class="control-group">
                                @Html.LabelFor(m => m.Email, new { @class = "control-label" })
                                <div class="controls form-group">
                                    @Html.TextBoxFor(m => m.Email, new { @class = "form-control parsley-validated", required = "required", data_trigger = "change" })
                                </div>
                            </div>
                            <div class="control-group">
                                @Html.LabelFor(m => m.Password, new { @class = "control-label" })
                                <div class="controls form-group">
                                    @Html.PasswordFor(m => m.Password, new { @class = "form-control parsley-validated", required = "required" })
                                </div>
                            </div>
                            <div class="control-group">
                                @Html.LabelFor(m => m.ConfirmPassword, new { @class = "control-label" })
                                <div class="controls form-group">
                                    @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control parsley-validated", required = "required" })
                                </div>
                            </div>

                        </fieldset>
                        <div class="form-actions">
                            <button type="submit" class="btn btn-primary" value="Register">Validate &amp; Submit</button>
                            <button type="button" class="btn btn-default">Cancel</button>
                        </div>
                    }
                </div>
            </section>
        </div>
    </div>

</div>


@section scripts{
    @Scripts.Render("~/bundles/jqueryplugins")
    @Scripts.Render("~/bundles/backboneunderscore")
    @Scripts.Render("~/bundles/bootstrap")
    @Scripts.Render("~/bundles/site")

    <script>
        $("#Register").submit(function (event) {
            
            event.preventDefault();
            
            initializeSimpleLogin(function (email) {
                if (email){
                    // user authenticated with Firebase
                    console.log('User ID: ' + user.id + ', Email: ' + user.email + ', Provider: ' + user.provider);
                    window.location.replace("../Dashboard");

                } else {
                    //console.log('invalid uid/pwd');
                    auth.createUser($("#Email").val(), $("#Password").val(), function (error, user) {
                        if (!error) {
                            var user = createUserObject();
                            window.location.replace("../Dashboard");
                        }
                        else {
                            // an error occurred while attempting login
                            console.log('error' + error);
                            switch (error.code) {
                                case 'INVALID_EMAIL':
                                    console.log(error.code);
                                case 'INVALID_PASSWORD':
                                    console.log(error.code);
                                default:
                                    console.log(error.code);
                            }
                            return;
                        }
                    });

                }

            });




           
            
        });
        

        function createUserObject() {
            console.log('createUserObject');
            //var fb = new Firebase("https://jdt.firebaseio.com/Users/");
            var userName = $("#UserName").val();
            var firstName = $("#FirstName").val();
            var lastName = $("#LastName").val();
            var email = $("#Email").val();
            try {
                createNewUser({
                    "UserName": userName,
                    "Name": {
                        "First": firstName,
                        "Last": lastName
                    },
                    "Email": email

                });
            }
            catch (e) {
                console.log(e);
            }
        }

       
    </script>
}
